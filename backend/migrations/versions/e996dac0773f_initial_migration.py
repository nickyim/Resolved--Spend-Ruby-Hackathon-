"""Initial migration.

Revision ID: e996dac0773f
Revises: 
Create Date: 2024-08-17 11:19:31.374244

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e996dac0773f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('File')
    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.drop_index('User_clerkId_key')
        batch_op.drop_index('User_email_key')

    op.drop_table('User')
    with op.batch_alter_table('Entry', schema=None) as batch_op:
        batch_op.drop_index('Entry_entryId_key')

    op.drop_table('Entry')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Entry',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Entry_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('entryId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('isComplaint', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('product', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subProduct', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('issue', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subIssue', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('entryText', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dateSentToCompany', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('dateReceived', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('company', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('companyResponse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('companyPublicResponse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('consumerDisputed', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('consumerConsentProvided', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('zipCode', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('submittedVia', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tags', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timely', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('productCategory', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subProductCategory', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vectorId', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('userId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name='Entry_userId_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='Entry_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('Entry', schema=None) as batch_op:
        batch_op.create_index('Entry_entryId_key', ['entryId'], unique=True)

    op.create_table('User',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"User_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('clerkId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='User_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.create_index('User_email_key', ['email'], unique=True)
        batch_op.create_index('User_clerkId_key', ['clerkId'], unique=True)

    op.create_table('File',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('TEXT', 'IMAGE', 'VIDEO', 'AUDIO', 'JSON', name='FileType'), autoincrement=False, nullable=False),
    sa.Column('entryId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('userId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['entryId'], ['Entry.id'], name='File_entryId_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name='File_userId_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='File_pkey')
    )
    # ### end Alembic commands ###
